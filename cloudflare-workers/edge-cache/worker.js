/**
 * Edge Cache Worker –¥–ª—è BelAutoCenter
 *
 * –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü –≤ Cloudflare Edge Cache
 * –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
 * - –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ Workers (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ cache miss)
 * - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å (5-20ms –ø—Ä–∏ cache hit)
 * - –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫—ç—à–∞
 *
 * –õ–æ–≥–∏–∫–∞:
 * 1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç Cloudflare Edge Cache
 * 2. –ü—Ä–∏ HIT ‚Üí –æ—Ç–¥–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é (Worker –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è)
 * 3. –ü—Ä–∏ MISS ‚Üí –≤—ã–∑—ã–≤–∞–µ—Ç Next.js Worker
 * 4. –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ Cache-Control
 * 5. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ Edge Cache –Ω–∞ 24 —á–∞—Å–∞
 */

export default {
  async fetch(request, env, ctx) {
    const url = new URL(request.url);
    const cache = caches.default;

    // CORS preflight
    if (request.method === 'OPTIONS') {
      return handleCORS(request);
    }

    // ============================================
    // 1. –ü–†–û–í–ï–†–ö–ê EDGE CACHE
    // ============================================

    // –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –∫—ç—à–∞ (–±–µ–∑ query –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏)
    const cacheKey = new Request(url.toString(), {
      method: 'GET',
      headers: request.headers
    });

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∫—ç—à–∞
    let response = await cache.match(cacheKey);

    if (response) {
      console.log(`‚úÖ Edge Cache HIT: ${url.pathname}`);

      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      const headers = new Headers(response.headers);
      headers.set('X-Cache-Status', 'HIT');
      headers.set('X-Cache-Worker', 'edge-cache');

      return new Response(response.body, {
        status: response.status,
        statusText: response.statusText,
        headers
      });
    }

    console.log(`‚ùå Edge Cache MISS: ${url.pathname}`);

    // ============================================
    // 2. –ó–ê–ü–†–û–° –ö NEXT.JS WORKER
    // ============================================

    try {
      // –í—ã–∑—ã–≤–∞–µ–º Next.js Worker (Service Binding)
      response = await env.NEXTJS.fetch(request);

      // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ —É—Å–ø–µ—à–Ω—ã–π - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
      if (!response.ok) {
        console.log(`‚ö†Ô∏è Next.js returned ${response.status} for ${url.pathname}`);
        return response;
      }

      // ============================================
      // 3. –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û–õ–ò–¢–ò–ö–ò –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø
      // ============================================

      const shouldCache = shouldCachePath(url.pathname);

      if (!shouldCache) {
        console.log(`üö´ Not caching: ${url.pathname}`);
        return response;
      }

      // ============================================
      // 4. –î–û–ë–ê–í–õ–ï–ù–ò–ï –ó–ê–ì–û–õ–û–í–ö–û–í –ò –ö–≠–®–ò–†–û–í–ê–ù–ò–ï
      // ============================================

      const headers = new Headers(response.headers);

      // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è Edge –∫—ç—à–∞ (24 —á–∞—Å–∞)
      headers.set('Cache-Control', 'public, max-age=86400, s-maxage=86400');
      headers.set('CDN-Cache-Control', 'max-age=86400');
      headers.set('Cloudflare-CDN-Cache-Control', 'max-age=86400');

      // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      headers.set('X-Cache-Status', 'MISS');
      headers.set('X-Cache-Worker', 'edge-cache');
      headers.set('X-Cached-At', new Date().toISOString());

      const cachedResponse = new Response(response.body, {
        status: response.status,
        statusText: response.statusText,
        headers
      });

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Edge Cache –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
      ctx.waitUntil(cache.put(cacheKey, cachedResponse.clone()));

      console.log(`üíæ Cached in Edge: ${url.pathname}`);

      return cachedResponse;

    } catch (error) {
      console.error(`‚ùå Error fetching from Next.js:`, error);

      return new Response('Internal Server Error', {
        status: 500,
        headers: {
          'Content-Type': 'text/plain',
          'X-Cache-Status': 'ERROR'
        }
      });
    }
  }
};

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å –ø—É—Ç—å
 */
function shouldCachePath(pathname) {
  // –ö—ç—à–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–∞–ª–æ–≥–∞
  if (pathname.startsWith('/catalog')) {
    return true;
  }

  // –ö—ç—à–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  if (pathname === '/' || pathname === '') {
    return true;
  }

  // –ö—ç—à–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const staticPages = ['/about', '/contacts', '/credit', '/leasing', '/reviews', '/privacy'];
  if (staticPages.includes(pathname)) {
    return true;
  }

  // –ù–ï –∫—ç—à–∏—Ä—É–µ–º API —Ä–æ—É—Ç—ã
  if (pathname.startsWith('/api/')) {
    return false;
  }

  // –ù–ï –∫—ç—à–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∫—É
  if (pathname.startsWith('/adminbel')) {
    return false;
  }

  // –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –∫—ç—à–∏—Ä—É–µ–º —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é
  return false;
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ CORS preflight –∑–∞–ø—Ä–æ—Å–æ–≤
 */
function handleCORS(request) {
  return new Response(null, {
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization',
      'Access-Control-Max-Age': '86400',
    }
  });
}