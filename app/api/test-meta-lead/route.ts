import { NextRequest, NextResponse } from 'next/server'

export const runtime = 'nodejs'

export async function POST(request: NextRequest) {
  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–µ–π–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ª–∏–¥–∞
    const testLeadData = {
      name: '–¢–µ—Å—Ç–æ–≤—ã–π –õ–∏–¥',
      phone: '+1234567890',
      email: 'test@example.com',
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN
    const TELEGRAM_CHANNEL_ID = process.env.TELEGRAM_CHANNEL_ID

    if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHANNEL_ID) {
      return NextResponse.json(
        { success: false, error: 'Telegram credentials not configured' },
        { status: 500 }
      )
    }

    const message = `üì± <b>–¢–ï–°–¢–û–í–´–ô –ª–∏–¥ –∏–∑ Meta (Facebook/Instagram)</b>\n\nüë§ <b>–ò–º—è:</b> ${testLeadData.name}\nüìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${testLeadData.phone}\nüìß <b>Email:</b> ${testLeadData.email}\n\n‚ö†Ô∏è <i>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</i>`

    const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`

    const response = await fetch(telegramUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHANNEL_ID,
        text: message,
        parse_mode: 'HTML',
      }),
    })

    if (response.ok) {
      return NextResponse.json({
        success: true,
        message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram'
      })
    } else {
      return NextResponse.json(
        { success: false, error: 'Failed to send test message to Telegram' },
        { status: 500 }
      )
    }
  } catch (error) {
    return NextResponse.json(
      { success: false, error: 'Internal server error' },
      { status: 500 }
    )
  }
}
